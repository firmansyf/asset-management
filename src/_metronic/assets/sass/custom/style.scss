@import '../core/components/variables';

@each $color, $value in $theme-colors {
  .bg-gradient-#{$color} {
    // background-image: linear-gradient($value, map-get($theme-light-colors, $color));
    background-image: linear-gradient($value, rgba(0, 0, 0, 1) 300%);
  }
}
@each $color, $value in $grays {
  .bg-gray-#{$color} {
    background-color: $value !important;
  }
}

@mixin customGradient($from, $to) {
  background: linear-gradient(to bottom right, $from, $to);
  background: -o-linear-gradient(to bottom right, $from, $to);
  background: -moz-linear-gradient(to bottom right, $from, $to);
  background: -khtml-linear-gradient(to bottom right, $from, $to);
  background: -webkit-linear-gradient(to bottom right, $from, $to);
}

.gd-pink {
  @include customGradient(#ff9cc3, #fd3484);
}
.gd-peach {
  @include customGradient(#ffdaee, #ff439a);
}
.gd-red {
  @include customGradient(#ffa3bb, #ff1f58);
}
.gd-purple {
  @include customGradient(#f5d6ff, #b34db0);
}
.gd-orange {
  @include customGradient(#ffc5a3, #fb5d00);
}
.gd-brown {
  @include customGradient(#fddabc, #b74c01);
}
.gd-yellow {
  @include customGradient(#ffe181, #ffc201);
}
.gd-green {
  @include customGradient(#c0ffd1, #1d8b43);
}
.gd-blue {
  @include customGradient(#bee2fd, #1a89dd);
}
.gd-navy {
  @include customGradient(#c0d9ff, #216bb7);
}
.gd-ocean {
  @include customGradient(#b3fdff, #009dad);
}
.gd-teal {
  @include customGradient(#aef4ff, #008d79);
}
.gd-1 {
  @include customGradient(#fe9999, #c24dfe);
}
.gd-2 {
  @include customGradient(#ee99fe, #4df9d1);
}
.gd-3 {
  @include customGradient(#90e5ff, #ff439a);
}

.menu-link {
  &.active > .menu-title {
    font-weight: 600 !important;
  }
  &:hover,
  &.active {
    i {
      color: $primary !important;
    }
    &:after {
      content: '';
    }
  }
}
.menu-item {
  .menu-link {
    &.active {
      position: relative;
      background-color: #eee !important; // For light
      &:before {
        content: '';
        width: 3px;
        height: 100%;
        display: block;
        position: absolute;
        background: $primary;
        left: 0;
      }
    }
    // .menu-title {
    //   // color: #ccc; // For dark
    // }
  }
}
.show:not(.menu-dropdown) > .menu-sub-accordion,
.menu-sub-accordion.show,
.menu-sub-accordion {
  background-color: #fafafa;
  margin: 0 25px;
  border-radius: 10px;
  padding-top: 5px;
  padding-bottom: 5px;
}
.aside-menu .menu .menu-sub:not([data-popper-placement]) > .menu-item > .menu-content,
.aside-menu .menu .menu-sub:not([data-popper-placement]) > .menu-item > .menu-link,
.aside-menu
  .menu
  .menu-sub:not([data-popper-placement])
  > .menu-item
  > .menu-sub:not([data-popper-placement])
  > .menu-item
  > .menu-content,
.aside-menu
  .menu
  .menu-sub:not([data-popper-placement])
  > .menu-item
  > .menu-sub:not([data-popper-placement])
  > .menu-item
  > .menu-link {
  padding: 0 10px;
}
.content {
  background-color: #fff;
}
.toolbar {
  box-shadow: unset !important;
  border-bottom: 1px solid $gray-300 !important;
  background: rgba(250, 250, 250, 0.75) !important;
  -webkit-backdrop-filter: blur(10px);
  -moz-backdrop-filter: blur(10px);
  -o-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
}
@for $i from 0 through 100 {
  .radius-#{$i} {
    border-radius: #{$i}px !important;
  }
}
@for $i from 0 through 20 {
  .space-#{$i} {
    letter-spacing: #{$i}px !important;
  }
}
.table-row-middle {
  tr th,
  tr td {
    vertical-align: middle !important;
  }
}
.word-break {
  word-break: break-all;
  white-space: pre-wrap;
}
$hex: (
  'a': 'a',
  'b': 'b',
  'c': 'c',
  'd': 'd',
  'e': 'e',
  'f': 'f',
  '0': '0',
  '1': '1',
  '2': '2',
  '3': '3',
  '4': '4',
  '5': '5',
  '6': '6',
  '7': '7',
  '8': '8',
  '9': '9',
) !default;

@each $key1, $value1 in $hex {
  @each $key2, $value2 in $hex {
    .bg-#{$key1 + $key2} {
      background-color: #{'#' +
        $value1 +
        $value2 +
        $value1 +
        $value2 +
        $value1 +
        $value2} !important;
    }
    .border-#{$key1 + $key2} {
      border-color: #{'#' + $value1 + $value2 + $value1 + $value2 + $value1 + $value2} !important;
    }
    .color-#{$key1 + $key2} {
      color: #{'#' + $value1 + $value2 + $value1 + $value2 + $value1 + $value2} !important;
    }
  }
}

.img-white {
  -webkit-filter: brightness(0) invert(1);
  -moz-filter: brightness(0) invert(1);
  -ms-filter: brightness(0) invert(1);
  -o-filter: brightness(0) invert(1);
  filter: brightness(0) invert(1);
}

.text-wrap {
  white-space: pre-wrap !important;
  white-space: -moz-pre-wrap !important;
  white-space: -pre-wrap !important;
  white-space: -o-pre-wrap !important;
  word-wrap: break-word !important;
}

.css-26l3qy-menu,
.css-h1a9i4-menu {
  z-index: 99999 !important;
}

@mixin truncateMultiLines($lineCount) {
  display: -webkit-box;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: pre-line;
  line-clamp: $lineCount;
  -o-line-clamp: $lineCount;
  -moz-line-clamp: $lineCount;
  -khtml-line-clamp: $lineCount;
  -webkit-line-clamp: $lineCount;
  box-orient: vertical;
  -o-box-orient: vertical;
  -moz-box-orient: vertical;
  -khtml-box-orient: vertical;
  -webkit-box-orient: vertical;
}

@for $i from 1 through 10 {
  .text-truncate-#{$i} {
    @include truncateMultiLines(#{$i});
  }
}
.svg-icon svg [fill]:not(.permanent):not(g) {
  transition: fill 0.3s ease;
  fill: $primary;
}
.btn.btn-color-gray-600 .svg-icon svg [fill]:not(.permanent):not(g) {
  transition: fill 0.3s ease;
  fill: $primary;
}

.accordion-fit-content .accordion-button::after {
  margin-left: 0 !important;
}

@each $color, $value in $grays {
  .bg-hover-gray-#{$color}:not(.active):hover {
    background-color: $value;
  }
}

.rdt-filter-date {
  width: 110px;
}

.role-permission {
  z-index: 10;
  background: #ffffff;
  border-bottom: 1px dashed #eae5e5;
  padding-top: 15px;
  padding-bottom: 10px;
  padding-left: 40px;
  margin-top: -20px;
  margin-bottom: 25px;
}

.role-permission-offset {
  top: 121px;
  @media (max-width: 991px) {
    top: 110px;
  }
}

.table-header-blue {
  background-color: $primary;
  color: $white;
  border: none;
  font-weight: 600;
}

.table-tr-border-none {
  border: none !important;
}

.table {
  --bs-table-hover-bg: #eeefff;
}

.badge-light-blue {
  color: #fff;
  background-color: #32b4d2;
}

p {
  margin-bottom: 0;
}

.btn-outline-icon {
  color: inherit !important;
}

.width-250 {
  width: 250px !important;
}

.width-230 {
  width: 230px !important;
}

.bg-read-only {
  background: #e2e6ea !important;
  color: #000 !important;
}

@for $i from 1 through 100 {
  .min-h-#{$i*5}px {
    min-height: #{$i * 5}px !important;
  }
  .max-h-#{$i*5}px {
    max-height: #{$i * 5}px !important;
  }
  .fs-#{$i}px {
    font-size: #{$i}px !important;
  }
}

.cursor-na {
  cursor: not-allowed !important;
}

.forgot-password-width {
  @media (min-width: 390px) {
    width: 381px;
  }
}

// GRID
$arraySize: (
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  'xxl': 1400px,
);

@mixin autoGrid {
  flex: 0 0 auto;
  width: auto;
}

@mixin customGrid($col) {
  flex: 0 0 auto;
  width: percentage(calc(1 / $col));
}

@for $i from 1 through 12 {
  .grid-#{$i} {
    @include customGrid($i);
  }
}

@each $key, $val in $arraySize {
  @media (min-width: $val) {
    @for $i from 1 through 12 {
      .grid-#{$key}-#{$i} {
        @include customGrid($i);
      }
    }
  }
}

.meter-daily-frequency {
  padding: 5px !important;
}

.custom-title-asset-card {
  min-width: 165px !important;
}

.custom-scroll-bar {
  scrollbar-width: initial;
  scrollbar-color: #c1c1c1 #f1f1f1 !important;
}

.custom-scroll-bar:hover {
  scrollbar-width: initial;
  scrollbar-color: #606060 #f1f1f1 !important;
}

.custom-scroll-bar {
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px #aaa;
    border-radius: 10px;
  }
  &::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 10px;
  }
  &:hover::-webkit-scrollbar-thumb {
    background: #777;
  }
}
